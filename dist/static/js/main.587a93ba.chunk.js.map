{"version":3,"sources":["component/layout/SignInLinks.js","store/actions/authAction.js","component/layout/SignOutLinks.js","component/layout/Navbar.js","component/dashboard/Notifications.js","component/projects/ProjectSummary.js","component/projects/ProjectList.js","component/dashboard/Dashboard.js","component/projects/ProjectDetails.js","component/auth/SignIn.js","component/auth/SignUp.js","component/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducers.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","className","to","onClick","profile","initials","SignOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSumbit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","authErorr","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","handleSubmit","createProject","history","push","authId","add","authorId","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","unregister","navigator","serviceWorker","ready","registration","error","message","initState","aurhError","authReducers","action","projectReducers","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"4RAyBeA,cAAQ,MANI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,GCLT,SAACA,EAAUE,EAAX,IACeC,EADwB,EAAjBA,eAGfC,OAAOH,UAAUI,MAAK,WAC3BL,EAAS,CAACM,KAAM,uBACjBC,OAAO,SAACC,GACPR,EAAS,CAACM,KAAM,gBAAiBE,aDG9BT,EApBO,SAACU,GACrB,OACE,6BACE,wBAAIC,UAAU,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBACJ,4BAAI,uBAAGC,QAASH,EAAMR,SAAlB,YACJ,4BAAI,kBAAC,IAAD,CAASU,GAAG,IAAID,UAAU,mCAC3BD,EAAMI,QAAQC,gBEAVC,EATM,WACjB,OACI,wBAAIL,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,aCuBDZ,eARS,SAACiB,GAEvB,OADAC,QAAQC,IAAIF,GACN,CACJZ,KAAMY,EAAMG,SAASf,KACrBS,QAASG,EAAMG,SAASN,WAIbd,EAvBA,SAACU,GAAW,IACjBL,EAAkBK,EAAlBL,KAAMS,EAAYJ,EAAZI,QAERO,EAAQhB,EAAKiB,IAAM,kBAAC,EAAD,CAAeR,QAASA,IAAc,kBAAC,EAAD,MAE/D,OACE,yBAAKH,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,aACCU,O,iBCaME,EA1BO,SAACb,GAAW,IACtBc,EAAkBd,EAAlBc,cACR,OACI,yBAAKb,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBACTa,GAAiBA,EAAcC,KAAI,SAAAC,GAChC,OACI,wBAAIC,IAAKD,EAAKE,IACV,0BAAMjB,UAAU,aAAae,EAAKG,KAAlC,KACA,8BAAOH,EAAKI,SACZ,yBAAKnB,UAAU,uBACVoB,IAAOL,EAAKM,KAAKC,UAAUC,oBCArDC,EAbQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OACI,yBAAKzB,UAAU,kCACP,yBAAKA,UAAU,wCACf,0BAAMA,UAAU,cAAcyB,EAAQC,OACtC,wCAAcD,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChD,uBAAG5B,UAAU,aAAaoB,IAAOK,EAAQI,UAAUP,UAAUQ,eCU9DC,EAhBK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OACI,yBAAKhC,UAAU,wBACVgC,GAAYA,EAASlB,KAAI,SAAAW,GACtB,OACI,kBAAC,IAAD,CAAMxB,GAAI,YAAcwB,EAAQR,GAAID,IAAKS,EAAQR,IAC7C,kBAAC,EAAD,CAAgBQ,QAASA,U,gBCF3CQ,E,uKAEQ,IAAD,EAIqCC,KAAKnC,MAAvCiC,EAJH,EAIGA,SAAUtC,EAJb,EAIaA,KAAMmB,EAJnB,EAImBA,cAExB,OAAInB,EAAKiB,IAEL,yBAAKX,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAagC,SAAUA,KAE3B,yBAAKhC,UAAU,wBACX,kBAAC,EAAD,CAAea,cAAeA,OARzB,kBAAC,IAAD,CAAUZ,GAAG,gB,GARlBkC,aAgCTC,cACX/C,aAToB,SAACiB,GACrB,MAAO,CACH0B,SAAU1B,EAAM+B,UAAUC,QAAQN,SAClCtC,KAAMY,EAAMG,SAASf,KACrBmB,cAAeP,EAAM+B,UAAUC,QAAQzB,kBAM3C0B,2BAAiB,CACb,CAACC,WAAY,WAAYC,QAAS,CAAC,YAAa,SAChD,CAACD,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJnDL,CAMZH,GCXH,IAUeG,cACX/C,aAXoB,SAACiB,EAAOqC,GAC5B,IAAM1B,EAAK0B,EAASC,MAAMC,OAAO5B,GAC3Be,EAAW1B,EAAM+B,UAAUS,KAAKd,SAEtC,MAAM,CACFP,QAFYO,EAAWA,EAASf,GAAM,KAGtCvB,KAAMY,EAAMG,SAASf,SAMzB6C,2BAAiB,CACb,CAACC,WAAY,cAHNJ,EAtCf,SAAwBrC,GAAQ,IACrB0B,EAAkB1B,EAAlB0B,QACP,OADyB1B,EAATL,KACPiB,IAELc,EACA,yBAAKzB,UAAU,qCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAcyB,EAAQC,OACtC,2BAAID,EAAQN,UAEhB,yBAAKnB,UAAU,wCACX,0CAAgByB,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClD,oDAQT,yBAAK5B,UAAU,oBACX,qDApBU,kBAAC,IAAD,CAAUC,GAAG,e,QCLhC8C,E,4MACFzC,MAAQ,CACJ0C,MAAO,GACPC,SAAU,I,EAEdC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAGhCC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKzD,MAAM0D,OAAO,EAAKnD,Q,uDAEjB,IAAD,EACqB4B,KAAKnC,MAAxB2D,EADF,EACEA,UACP,OAFK,EACahE,KACTiB,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAG9B,6BACI,yBAAKD,UAAU,aACX,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SACzC,wBAAIA,UAAU,2BAAd,SACA,yBAAKA,UAAU,eACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAOhE,KAAK,QAAQqB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAElD,yBAAKlD,UAAU,eACX,2BAAO4D,QAAQ,YAAf,YACA,2BAAOhE,KAAK,WAAWqB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAExD,yBAAKlD,UAAU,eACX,4BAAQA,UAAU,sBAAlB,UAEJ,yBAAKA,UAAU,mBACV0D,EAAY,2BAAIA,GAAiB,a,GAnCzCvB,aAyDN9C,eAbS,SAACiB,GACrB,MAAO,CACHoD,UAAWpD,EAAMZ,KAAKgE,UACtBhE,KAAMY,EAAMG,SAASf,SAIF,SAACJ,GACxB,MAAO,CACHmE,OAAQ,SAACK,GAAD,OAAWxE,GRzDJyE,EQyDoBD,ERxDjC,SAACxE,EAAUE,EAAX,IACeC,EADwB,EAAjBA,eAGfC,OAAOsE,2BACZD,EAAYf,MACZe,EAAYd,UACdtD,MAAM,WACJL,EAAS,CAACM,KAAM,qBACjBC,OAAO,SAACC,GACPR,EAAS,CAACM,KAAM,eAAgBE,SAVtB,IAACiE,MQ6DR1E,CAA8C0D,GCxDvDkB,E,4MACF3D,MAAQ,CACJ0C,MAAO,GACPC,SAAU,GACViB,UAAW,GACXC,SAAU,I,EAEdjB,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAGhCC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKzD,MAAMqE,OAAO,EAAK9D,Q,uDAEjB,IAAD,EACuB4B,KAAKnC,MAAzBL,EADH,EACGA,KAAM2E,EADT,EACSA,UACd,OAAI3E,EAAKiB,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAE9B,6BACI,yBAAKD,UAAU,aACX,0BAAM2D,SAAUzB,KAAKqB,aAAcvD,UAAU,SACzC,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAOhE,KAAK,QAAQqB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAElD,yBAAKlD,UAAU,eACX,2BAAO4D,QAAQ,YAAf,YACA,2BAAOhE,KAAK,WAAWqB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAExD,yBAAKlD,UAAU,eACX,2BAAO4D,QAAQ,aAAf,cACA,2BAAOhE,KAAK,OAAOqB,GAAG,YAAY4C,SAAU3B,KAAKgB,gBAErD,yBAAKlD,UAAU,eACX,2BAAO4D,QAAQ,YAAf,cACA,2BAAOhE,KAAK,OAAOqB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAEpD,yBAAKlD,UAAU,eACX,4BAAQA,UAAU,gCAAlB,WACA,yBAAKA,UAAU,mBACVqE,EAAY,2BAAIA,EAAJ,KAAsB,c,GA3C9ClC,aAkEN9C,eAbS,SAACiB,GACrB,MAAO,CACHZ,KAAMY,EAAMG,SAASf,KACrB2E,UAAW/D,EAAMZ,KAAKgE,cAIH,SAACpE,GACxB,MAAO,CACH8E,OAAQ,SAACE,GAAD,OAAahF,ETxCP,SAACgF,GACnB,OAAO,SAAChF,EAAUE,EAAX,GAAsD,IAAhCC,EAA+B,EAA/BA,YAAa8E,EAAkB,EAAlBA,aAChC9D,EAAWhB,IACX4C,EAAYkC,IAElB9D,EAASf,OAAO8E,+BACZF,EAAQtB,MACRsB,EAAQrB,UACVtD,MAAK,SAAC8E,GACJ,OAAOpC,EAAUG,WAAW,SAASkC,IAAID,EAAKvD,KAAKP,KAAKgE,IAAI,CACxDT,UAAWI,EAAQJ,UACnBC,SAAUG,EAAQH,SAClB/D,SAAUkE,EAAQJ,UAAU,GAAKI,EAAQH,SAAS,QAEvDxE,MAAK,WACJL,EAAS,CAACM,KAAM,sBACjBC,OAAO,SAACC,GACPR,EAAS,CAACM,KAAM,eAAiBE,YSuBPsE,CAAOE,QAI9BjF,CAA8C4E,G,QCjEvDW,E,4MACJtE,MAAQ,CACNoB,MAAO,GACPP,QAAS,I,EAEX+B,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAG5BuB,aAAe,SAAC1B,GACdA,EAAEK,iBAEF,EAAKzD,MAAM+E,cAAc,EAAKxE,OAC9B,EAAKP,MAAMgF,QAAQC,KAAK,M,uDAIxB,OADiB9C,KAAKnC,MAAdL,KACCiB,IAGP,yBAAKX,UAAU,aACb,0BAAMA,UAAU,QAAQ2D,SAAUzB,KAAK2C,cACrC,wBAAI7E,UAAU,2BAAd,wBACA,yBAAKA,UAAU,eACb,2BAAOJ,KAAK,OAAOqB,GAAG,QAAQ4C,SAAU3B,KAAKgB,eAC7C,2BAAOU,QAAQ,SAAf,kBAEF,yBAAK5D,UAAU,eACb,8BAAUiB,GAAG,UAAUjB,UAAU,uBAAuB6D,SAAU3B,KAAKgB,eACvE,2BAAOU,QAAQ,WAAf,oBAEF,yBAAK5D,UAAU,eACb,4BAAQA,UAAU,sBAAlB,aAfa,kBAAC,IAAD,CAAUC,GAAG,gB,GAlBVkC,aAqDb9C,eAZS,SAACiB,GACvB,MAAO,CACLZ,KAAMY,EAAMG,SAASf,SAIE,SAAAJ,GACzB,MAAO,CACLwF,cAAe,SAACrD,GAAD,OAAanC,ECvDH,SAACmC,GAC1B,OAAO,SAACnC,EAAUE,EAAX,GAAsD,EAAhCC,YAAiC,IAEtD4C,GAAYkC,EAFyC,EAAnBA,gBAGlCpE,EAAUX,IAAWiB,SAASN,QAC9B8E,EAASzF,IAAWiB,SAASf,KAAKiB,IACxC0B,EAAUG,WAAW,YAAY0C,IAAjC,eACKzD,EADL,CAEEE,gBAAiBxB,EAAQ+D,UACzBtC,eAAgBzB,EAAQgE,SACxBgB,SAAUF,EACVpD,UAAW,IAAIuD,QACdzF,MAAM,WACPL,EAAS,CAAEM,KAAM,iBAAkB6B,eAClC5B,OAAM,SAACC,GACRR,EAAS,CAACM,KAAM,uBAAwBE,YDwCPgF,CAAcrD,QAIxCpC,CAA6CuF,GE/B7CS,E,uKAjBX,OACE,kBAAC,IAAD,KACE,yBAAKrF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsF,OAAK,EAACC,KAAK,IAAGC,UAAWvD,IAChC,kBAAC,IAAD,CAAOsD,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWzC,IACjC,kBAAC,IAAD,CAAOwC,KAAK,UAAUC,UAAWvB,IACjC,kBAAC,IAAD,CAAOsB,KAAK,UAAUC,UAAWZ,W,GAX3BzC,aCGEuD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjD,MACvB,2DAgHC,SAASkD,IACV,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtG,MAAK,SAAAuG,GACJA,EAAaJ,gBAEdjG,OAAM,SAAAsG,GACL5F,QAAQ4F,MAAMA,EAAMC,YCzI5B,IAAMC,EAAY,CACdC,UAAW,MAwCAC,EArCM,WAAgC,IAA/BjG,EAA8B,uDAAtB+F,EAAWG,EAAW,uCAChD,OAAOA,EAAO5G,MACV,IAAK,cAED,OADAW,QAAQC,IAAI,eACL,eACAF,EADP,CAEIoD,UAAW,iBAEnB,IAAK,gBAED,OADAnD,QAAQC,IAAI,iBACL,eACAF,EADP,CAEIoD,UAAW,OAEnB,IAAK,kBAED,OADAnD,QAAQC,IAAI,mBACLF,EACX,IAAK,eAED,OADAC,QAAQC,IAAI,mBACLF,EACX,IAAK,iBAED,OADAC,QAAQC,IAAI,kBACL,eACAF,EADP,CAEIoD,UAAW,OAEnB,IAAK,eAED,OADAnD,QAAQC,IAAI,iBACL,eACAF,EADP,CAEIoD,UAAW8C,EAAO1G,IAAIsG,UAE9B,QACI,OAAO9F,ICrCb+F,EAAY,CACdrE,SAAU,CACN,CAACf,GAAI,EAAGS,MAAO,wBAAyBP,QAAS,kBACjD,CAACF,GAAI,EAAGS,MAAO,oBAAqBP,QAAS,kBAC7C,CAACF,GAAI,EAAGS,MAAO,uBAAwBP,QAAS,oBAiBzCsF,EAbS,WAAgC,IAA/BnG,EAA8B,uDAAtB+F,EAAWG,EAAW,uCACnD,OAAQA,EAAO5G,MACX,IAAK,iBAED,OADAW,QAAQC,IAAI,kBAAmBgG,EAAO/E,SAC/BnB,EACX,IAAK,uBAED,OADAC,QAAQC,IAAI,wBAAyBgG,EAAO1G,KACrCQ,EACX,QACI,OAAOA,I,QCJJoG,EAPKC,YAAgB,CAChCjH,KAAM6G,EACN9E,QAASgF,EACTpE,UAAWuE,mBACXnG,SAAUoG,oB,wCCIdpG,IAASqG,cAVY,CACnBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB7G,IAAS4B,YAAYkF,SAAS,CAAEC,uBAAuB,IAExC/G,QAAf,ECDMgH,EAAQC,YAAYhB,EACxBtE,YACEuF,YAAgBC,IAAMC,kBAAkB,CAAEpI,0BAAa8E,+BACvDuD,6BAAmBC,EAAU,CAACC,YAAa,QAASC,wBAAwB,EAAMC,mBAAmB,IACrGC,yBAAeJ,KAInBN,EAAMW,oBAAoBzI,MAAK,WAC7B0I,IAASC,OACP,kBAAC,IAAD,CAAUb,MAAOA,GACf,kBAAC,EAAD,OAGFc,SAASC,eAAe,SAE1BxC,OAQFA,M","file":"static/js/main.587a93ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authAction'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then( () => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch( (err) =>{\r\n            dispatch({type: 'LOGIN_ERROR'}, err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        }).catch( (err) =>{\r\n            dispatch({type: 'LOGOUT_ERROR'}, err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch ((err) => {\r\n            dispatch({type: 'SIGNUP_ERORR' , err})\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks","\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignInLinks'\r\nimport SignedOutLinks from './SignOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props \r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return(\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-info\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project}  />\r\n                    </Link>\r\n                    \r\n                )\r\n            })}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react';\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() {\r\n        \r\n        \r\n\r\n        const { projects, auth, notifications } = this.props;\r\n\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', \"desc\"]},\r\n        {collection: 'notifications', limit: 3, orderBy: ['time', \"desc\"]}\r\n    ])\r\n) (Dashboard)","import React from 'react'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nfunction ProjectDetails(props) {\r\n    const {project, auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    \r\n    if (project) {return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>2nd April , 10AM</div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n    } else {\r\n\r\n        return (\r\n           <div className=\"container center\">\r\n               <p>loading projects.....</p>\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {    \r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return{\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n) (ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn} from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSumbit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if (auth.uid) return <Redirect to=\"/\" />\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <form onSubmit={this.handleSumbit} className=\"white\">\r\n                        <h5 className=\"grey-text text-darken-3\">Login</h5>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"email\">Emali</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1\">Login</button>\r\n                        </div>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authAction'  \r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSumbit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authErorr } = this.props;\r\n        if (auth.uid) return <Redirect to=\"/\" />  \r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <form onSubmit={this.handleSumbit} className=\"white\">\r\n                        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"email\">Emali</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"firstName\">First Name</label>\r\n                            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"lastName\">First Name</label>\r\n                            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                            <div className=\"red-text center\">\r\n                                {authErorr ? <p>{authErorr} </p> : null}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authErorr: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectAction'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore }) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authId = getState().firebase.auth.uid;\r\n      firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authId,\r\n        createdAt: new Date()\r\n      }).then( () => {\r\n        dispatch({ type: 'CREATE_PROJECT', project });\r\n      }).catch((err) => {\r\n        dispatch({type: 'CREATE_PROJECT_ERROR', err})\r\n      })\r\n    }\r\n  };","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './component/layout/Navbar'\nimport Dashboard from './component/dashboard/Dashboard'\nimport ProjectDetails from './component/projects/ProjectDetails'\nimport SignIn from './component/auth/SignIn'\nimport SignUp from './component/auth/SignUp'\nimport CreateProject from './component/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    aurhError: null\r\n};\r\n\r\nconst authReducers = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS': \r\n            console.log('signout success');\r\n            return state;\r\n        case 'LOGOUT_ERROR':\r\n            console.log('sdddddddddddddd');\r\n            return state\r\n        case 'SIGNUP_SUCCESS': \r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERORR':\r\n            console.log('signup failed');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducers","const initState = {\r\n    projects: [\r\n        {id: 1, title: 'help me to find peach', content: 'blah blah blah' },\r\n        {id: 2, title: 'collect all stars', content: 'blah blah blah' },\r\n        {id: 3, title: 'egg hunt with youshi', content: 'blah blah blah' },\r\n    ]\r\n};\r\n\r\nconst projectReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT' :\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR' :\r\n            console.log('created project error', action.err);\r\n            return state;\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducers","import {combineReducers } from 'redux';\r\nimport authReducers from './authReducer';\r\nimport projectReducers from './projectReducers';\r\nimport { firestoreReducer } from 'redux-firestore'; \r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducers,\r\n    project: projectReducers,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDgbaHekmpgjJN9VAua2rjxiMt0sMeYFSQ\",\r\n  authDomain: \"albedo-123.firebaseapp.com\",\r\n  databaseURL: \"https://albedo-123.firebaseio.com\",\r\n  projectId: \"albedo-123\",\r\n  storageBucket: \"albedo-123.appspot.com\",\r\n  messagingSenderId: \"476337790705\",\r\n  appId: \"1:476337790705:web:7449deb9b93661f1b11350\",\r\n  measurementId: \"G-EDXKQSJFCF\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase \r\n\r\n\r\n\r\n  // var firebaseConfig = {\r\n  //   apiKey: \"AIzaSyDgbaHekmpgjJN9VAua2rjxiMt0sMeYFSQ\",\r\n  //   authDomain: \"albedo-123.firebaseapp.com\",\r\n  //   databaseURL: \"https://albedo-123.firebaseio.com\",\r\n  //   projectId: \"albedo-123\",\r\n  //   storageBucket: \"albedo-123.appspot.com\",\r\n  //   messagingSenderId: \"476337790705\",\r\n  //   appId: \"1:476337790705:web:7449deb9b93661f1b11350\",\r\n  //   measurementId: \"G-EDXKQSJFCF\"\r\n  // };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase ,getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\n\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n    reduxFirestore(fbConfig)\n)\n  );\n  \nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ,\n    document.getElementById('root')\n  );\n  serviceWorker.unregister();\n\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}